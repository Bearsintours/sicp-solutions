function abs(x) {
    return x >= 0 ? x : -x;
}
                
function cube(x) {
    return x * x * x;
}
function p(x) {
    return 3 * x - 4 * cube(x);
}
function sine(angle) {
    return !(abs(angle) > 0.1)
           ? angle
           : p(sine(angle / 3.0));
}

sine(math_PI / 2);

# How many times is the function p applied when sine(12.15) is evaluated?
# => 5 is called 5 times with arguments 12.15, 4.05, 1.35, 0.45, 0.15, 0.05

# What is the order of growth in space and number of steps (as a function of a) 
# used by the process generated by the sine function when sine(a) is evaluated?
# Order of growth for space and number of steps is logarithmic:0log(n) 
# (angle is divided by three for each recursive call)
